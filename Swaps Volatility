{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [],
   "source": [
    "# ! pip install refinitiv-dataplatform\n",
    "\n",
    "import eikon as ek \n",
    "import refinitiv.dataplatform as rdp\n",
    "import pandas as pd\n",
    "import math as mt\n",
    "import numpy as np "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "ek.set_app_key(\"6ea4ece4e1f24e5bb11c798e8f838b89f4ad08ef\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<refinitiv.dataplatform.core.session.desktop_session.DesktopSession at 0x1eb7c1c5048>"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rdp.open_desktop_session(\"6ea4ece4e1f24e5bb11c798e8f838b89f4ad08ef\")"
   ]
  },
  {
   "attachments": {
    "TWSVI.png": {
     "image/png": ""
    }
   },
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "![TWSVI.png](attachment:TWSVI.png)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Instrument</th>\n",
       "      <th>CURRENCY</th>\n",
       "      <th>BID</th>\n",
       "      <th>ASK</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>GBP2YOIS=TWEB</td>\n",
       "      <td>GBP</td>\n",
       "      <td>0.950</td>\n",
       "      <td>0.957</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>GBP5YOIS=TWEB</td>\n",
       "      <td>GBP</td>\n",
       "      <td>1.051</td>\n",
       "      <td>1.058</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>GBP10YOIS=TWEB</td>\n",
       "      <td>GBP</td>\n",
       "      <td>0.990</td>\n",
       "      <td>0.997</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>GBP30YOIS=TWEB</td>\n",
       "      <td>GBP</td>\n",
       "      <td>0.840</td>\n",
       "      <td>0.849</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>USDAM3L2Y=TWEB</td>\n",
       "      <td>USD</td>\n",
       "      <td>0.754</td>\n",
       "      <td>0.762</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>USDAM3L5Y=TWEB</td>\n",
       "      <td>USD</td>\n",
       "      <td>1.354</td>\n",
       "      <td>1.358</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>USDAM3L10Y=TWEB</td>\n",
       "      <td>USD</td>\n",
       "      <td>1.657</td>\n",
       "      <td>1.661</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>USDAM3L30Y=TWEB</td>\n",
       "      <td>USD</td>\n",
       "      <td>1.793</td>\n",
       "      <td>1.797</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>EURAB6E2Y=TWEB</td>\n",
       "      <td>EUR</td>\n",
       "      <td>-0.331</td>\n",
       "      <td>-0.320</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>EURAB6E5Y=TWEB</td>\n",
       "      <td>EUR</td>\n",
       "      <td>-0.073</td>\n",
       "      <td>-0.063</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>EURAB6E10Y=TWEB</td>\n",
       "      <td>EUR</td>\n",
       "      <td>0.209</td>\n",
       "      <td>0.217</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>EURAB6E30Y=TWEB</td>\n",
       "      <td>EUR</td>\n",
       "      <td>0.368</td>\n",
       "      <td>0.383</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         Instrument CURRENCY    BID    ASK\n",
       "0     GBP2YOIS=TWEB      GBP  0.950  0.957\n",
       "1     GBP5YOIS=TWEB      GBP  1.051  1.058\n",
       "2    GBP10YOIS=TWEB      GBP  0.990  0.997\n",
       "3    GBP30YOIS=TWEB      GBP  0.840  0.849\n",
       "4    USDAM3L2Y=TWEB      USD  0.754  0.762\n",
       "5    USDAM3L5Y=TWEB      USD  1.354  1.358\n",
       "6   USDAM3L10Y=TWEB      USD  1.657  1.661\n",
       "7   USDAM3L30Y=TWEB      USD  1.793  1.797\n",
       "8    EURAB6E2Y=TWEB      EUR -0.331 -0.320\n",
       "9    EURAB6E5Y=TWEB      EUR -0.073 -0.063\n",
       "10  EURAB6E10Y=TWEB      EUR  0.209  0.217\n",
       "11  EURAB6E30Y=TWEB      EUR  0.368  0.383"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# load instruments\n",
    "df_G3, err = ek.get_data(\n",
    "    instruments = ['GBP2YOIS=TWEB', 'GBP5YOIS=TWEB', 'GBP10YOIS=TWEB', 'GBP30YOIS=TWEB', 'USDAM3L2Y=TWEB', 'USDAM3L5Y=TWEB',\n",
    "                  'USDAM3L10Y=TWEB', 'USDAM3L30Y=TWEB', 'EURAB6E2Y=TWEB', 'EURAB6E5Y=TWEB','EURAB6E10Y=TWEB', 'EURAB6E30Y=TWEB'], \n",
    "    fields = [\"Currency\", \"BID\",\"ASK\"]\n",
    ")\n",
    "display(df_G3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>GBP2YOIS=TWEB</th>\n",
       "      <th>CLOSE</th>\n",
       "      <th>HIGH</th>\n",
       "      <th>LOW</th>\n",
       "      <th>OPEN</th>\n",
       "      <th>COUNT</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Date</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2021-08-10</th>\n",
       "      <td>0.287</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-08-11</th>\n",
       "      <td>0.274</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-08-12</th>\n",
       "      <td>0.277</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-08-13</th>\n",
       "      <td>0.274</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-08-16</th>\n",
       "      <td>0.272</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-11-11</th>\n",
       "      <td>0.929</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-11-12</th>\n",
       "      <td>0.900</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-11-15</th>\n",
       "      <td>0.907</td>\n",
       "      <td>0.933</td>\n",
       "      <td>0.872</td>\n",
       "      <td>0.906</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-11-16</th>\n",
       "      <td>0.966</td>\n",
       "      <td>0.992</td>\n",
       "      <td>0.908</td>\n",
       "      <td>0.908</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-11-17</th>\n",
       "      <td>0.951</td>\n",
       "      <td>1.015</td>\n",
       "      <td>0.951</td>\n",
       "      <td>0.975</td>\n",
       "      <td>444</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>72 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "GBP2YOIS=TWEB  CLOSE   HIGH    LOW   OPEN  COUNT\n",
       "Date                                            \n",
       "2021-08-10     0.287    NaN    NaN    NaN     -1\n",
       "2021-08-11     0.274    NaN    NaN    NaN     -1\n",
       "2021-08-12     0.277    NaN    NaN    NaN     -1\n",
       "2021-08-13     0.274    NaN    NaN    NaN     -1\n",
       "2021-08-16     0.272    NaN    NaN    NaN     -1\n",
       "...              ...    ...    ...    ...    ...\n",
       "2021-11-11     0.929    NaN    NaN    NaN     -1\n",
       "2021-11-12     0.900    NaN    NaN    NaN     -1\n",
       "2021-11-15     0.907  0.933  0.872  0.906     -1\n",
       "2021-11-16     0.966  0.992  0.908  0.908     -1\n",
       "2021-11-17     0.951  1.015  0.951  0.975    444\n",
       "\n",
       "[72 rows x 5 columns]"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ek.get_timeseries('GBP2YOIS=TWEB', interval='daily')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>GBP5YOIS=TWEB</th>\n",
       "      <th>CLOSE</th>\n",
       "      <th>HIGH</th>\n",
       "      <th>LOW</th>\n",
       "      <th>OPEN</th>\n",
       "      <th>COUNT</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Date</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2021-08-10</th>\n",
       "      <td>0.460</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-08-11</th>\n",
       "      <td>0.447</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-08-12</th>\n",
       "      <td>0.462</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-08-13</th>\n",
       "      <td>0.451</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-08-16</th>\n",
       "      <td>0.441</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-11-11</th>\n",
       "      <td>1.027</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-11-12</th>\n",
       "      <td>0.987</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-11-15</th>\n",
       "      <td>1.006</td>\n",
       "      <td>1.024</td>\n",
       "      <td>0.947</td>\n",
       "      <td>0.985</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-11-16</th>\n",
       "      <td>1.057</td>\n",
       "      <td>1.091</td>\n",
       "      <td>0.946</td>\n",
       "      <td>0.946</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-11-17</th>\n",
       "      <td>1.044</td>\n",
       "      <td>1.102</td>\n",
       "      <td>1.040</td>\n",
       "      <td>1.084</td>\n",
       "      <td>691</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>72 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "GBP5YOIS=TWEB  CLOSE   HIGH    LOW   OPEN  COUNT\n",
       "Date                                            \n",
       "2021-08-10     0.460    NaN    NaN    NaN     -1\n",
       "2021-08-11     0.447    NaN    NaN    NaN     -1\n",
       "2021-08-12     0.462    NaN    NaN    NaN     -1\n",
       "2021-08-13     0.451    NaN    NaN    NaN     -1\n",
       "2021-08-16     0.441    NaN    NaN    NaN     -1\n",
       "...              ...    ...    ...    ...    ...\n",
       "2021-11-11     1.027    NaN    NaN    NaN     -1\n",
       "2021-11-12     0.987    NaN    NaN    NaN     -1\n",
       "2021-11-15     1.006  1.024  0.947  0.985     -1\n",
       "2021-11-16     1.057  1.091  0.946  0.946     -1\n",
       "2021-11-17     1.044  1.102  1.040  1.084    691\n",
       "\n",
       "[72 rows x 5 columns]"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "GBP_5Y = ek.get_timeseries('GBP5YOIS=TWEB', interval='daily')\n",
    "\n",
    "GBP_5Y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>USDAM3L10Y=TWEB</th>\n",
       "      <th>CLOSE</th>\n",
       "      <th>HIGH</th>\n",
       "      <th>LOW</th>\n",
       "      <th>OPEN</th>\n",
       "      <th>Range</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Date</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2016-01-04</th>\n",
       "      <td>2.149</td>\n",
       "      <td>2.185</td>\n",
       "      <td>2.096</td>\n",
       "      <td>2.178</td>\n",
       "      <td>0.089</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-01-05</th>\n",
       "      <td>2.118</td>\n",
       "      <td>2.167</td>\n",
       "      <td>2.117</td>\n",
       "      <td>2.149</td>\n",
       "      <td>0.050</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-01-06</th>\n",
       "      <td>2.055</td>\n",
       "      <td>2.128</td>\n",
       "      <td>2.050</td>\n",
       "      <td>2.120</td>\n",
       "      <td>0.078</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-01-07</th>\n",
       "      <td>2.021</td>\n",
       "      <td>2.078</td>\n",
       "      <td>2.003</td>\n",
       "      <td>2.057</td>\n",
       "      <td>0.075</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-01-08</th>\n",
       "      <td>1.956</td>\n",
       "      <td>2.080</td>\n",
       "      <td>1.956</td>\n",
       "      <td>2.021</td>\n",
       "      <td>0.124</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-11-10</th>\n",
       "      <td>1.441</td>\n",
       "      <td>1.597</td>\n",
       "      <td>1.453</td>\n",
       "      <td>1.460</td>\n",
       "      <td>0.144</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-11-12</th>\n",
       "      <td>1.618</td>\n",
       "      <td>1.629</td>\n",
       "      <td>1.567</td>\n",
       "      <td>1.595</td>\n",
       "      <td>0.062</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-11-15</th>\n",
       "      <td>1.648</td>\n",
       "      <td>1.661</td>\n",
       "      <td>1.320</td>\n",
       "      <td>1.604</td>\n",
       "      <td>0.341</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-11-16</th>\n",
       "      <td>1.664</td>\n",
       "      <td>1.671</td>\n",
       "      <td>1.618</td>\n",
       "      <td>1.642</td>\n",
       "      <td>0.053</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-11-17</th>\n",
       "      <td>1.653</td>\n",
       "      <td>1.678</td>\n",
       "      <td>1.648</td>\n",
       "      <td>1.668</td>\n",
       "      <td>0.030</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1476 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "USDAM3L10Y=TWEB  CLOSE   HIGH    LOW   OPEN  Range\n",
       "Date                                              \n",
       "2016-01-04       2.149  2.185  2.096  2.178  0.089\n",
       "2016-01-05       2.118  2.167  2.117  2.149  0.050\n",
       "2016-01-06       2.055  2.128  2.050  2.120  0.078\n",
       "2016-01-07       2.021  2.078  2.003  2.057  0.075\n",
       "2016-01-08       1.956  2.080  1.956  2.021  0.124\n",
       "...                ...    ...    ...    ...    ...\n",
       "2021-11-10       1.441  1.597  1.453  1.460  0.144\n",
       "2021-11-12       1.618  1.629  1.567  1.595  0.062\n",
       "2021-11-15       1.648  1.661  1.320  1.604  0.341\n",
       "2021-11-16       1.664  1.671  1.618  1.642  0.053\n",
       "2021-11-17       1.653  1.678  1.648  1.668  0.030\n",
       "\n",
       "[1476 rows x 5 columns]"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "USD_5Y = ek.get_timeseries('USDAM3L10Y=TWEB', interval='daily', fields='*', start_date='2016-01-01')\n",
    "USD_5Y[\"Range\"] = USD_5Y[\"HIGH\"] - USD_5Y[\"LOW\"]\n",
    "USD_5Y = USD_5Y.drop(['COUNT'], axis=1)\n",
    "\n",
    "USD_5Y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>USDAM3L10Y=TWEB</th>\n",
       "      <th>CLOSE</th>\n",
       "      <th>HIGH</th>\n",
       "      <th>LOW</th>\n",
       "      <th>OPEN</th>\n",
       "      <th>COUNT</th>\n",
       "      <th>Range</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Date</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2021-08-10</th>\n",
       "      <td>1.336</td>\n",
       "      <td>1.350</td>\n",
       "      <td>1.302</td>\n",
       "      <td>1.319</td>\n",
       "      <td>-1</td>\n",
       "      <td>0.048</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-08-11</th>\n",
       "      <td>1.331</td>\n",
       "      <td>1.366</td>\n",
       "      <td>1.297</td>\n",
       "      <td>1.349</td>\n",
       "      <td>-1</td>\n",
       "      <td>0.069</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-08-12</th>\n",
       "      <td>1.352</td>\n",
       "      <td>1.362</td>\n",
       "      <td>1.310</td>\n",
       "      <td>1.318</td>\n",
       "      <td>-1</td>\n",
       "      <td>0.052</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-08-13</th>\n",
       "      <td>1.283</td>\n",
       "      <td>1.349</td>\n",
       "      <td>1.262</td>\n",
       "      <td>1.342</td>\n",
       "      <td>-1</td>\n",
       "      <td>0.087</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-08-16</th>\n",
       "      <td>1.242</td>\n",
       "      <td>1.274</td>\n",
       "      <td>1.211</td>\n",
       "      <td>1.271</td>\n",
       "      <td>-1</td>\n",
       "      <td>0.063</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-11-10</th>\n",
       "      <td>1.441</td>\n",
       "      <td>1.597</td>\n",
       "      <td>1.453</td>\n",
       "      <td>1.460</td>\n",
       "      <td>-1</td>\n",
       "      <td>0.144</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-11-12</th>\n",
       "      <td>1.618</td>\n",
       "      <td>1.629</td>\n",
       "      <td>1.567</td>\n",
       "      <td>1.595</td>\n",
       "      <td>-1</td>\n",
       "      <td>0.062</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-11-15</th>\n",
       "      <td>1.648</td>\n",
       "      <td>1.661</td>\n",
       "      <td>1.320</td>\n",
       "      <td>1.604</td>\n",
       "      <td>-1</td>\n",
       "      <td>0.341</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-11-16</th>\n",
       "      <td>1.664</td>\n",
       "      <td>1.671</td>\n",
       "      <td>1.618</td>\n",
       "      <td>1.642</td>\n",
       "      <td>-1</td>\n",
       "      <td>0.053</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-11-17</th>\n",
       "      <td>1.656</td>\n",
       "      <td>1.678</td>\n",
       "      <td>1.648</td>\n",
       "      <td>1.668</td>\n",
       "      <td>3315</td>\n",
       "      <td>0.030</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>69 rows × 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "USDAM3L10Y=TWEB  CLOSE   HIGH    LOW   OPEN  COUNT  Range\n",
       "Date                                                     \n",
       "2021-08-10       1.336  1.350  1.302  1.319     -1  0.048\n",
       "2021-08-11       1.331  1.366  1.297  1.349     -1  0.069\n",
       "2021-08-12       1.352  1.362  1.310  1.318     -1  0.052\n",
       "2021-08-13       1.283  1.349  1.262  1.342     -1  0.087\n",
       "2021-08-16       1.242  1.274  1.211  1.271     -1  0.063\n",
       "...                ...    ...    ...    ...    ...    ...\n",
       "2021-11-10       1.441  1.597  1.453  1.460     -1  0.144\n",
       "2021-11-12       1.618  1.629  1.567  1.595     -1  0.062\n",
       "2021-11-15       1.648  1.661  1.320  1.604     -1  0.341\n",
       "2021-11-16       1.664  1.671  1.618  1.642     -1  0.053\n",
       "2021-11-17       1.656  1.678  1.648  1.668   3315  0.030\n",
       "\n",
       "[69 rows x 6 columns]"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "USD_5Y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# eikon time series is garbage, need to use rdp to get the data we want "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>BID</th>\n",
       "      <th>ASK</th>\n",
       "      <th>HIGH_1</th>\n",
       "      <th>LOW_1</th>\n",
       "      <th>NUM_MOVES</th>\n",
       "      <th>TRNOVR_UNS</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2013-12-19</th>\n",
       "      <td>1059.149096</td>\n",
       "      <td>1060.04592</td>\n",
       "      <td>1073.498279</td>\n",
       "      <td>1055.5618</td>\n",
       "      <td>1167</td>\n",
       "      <td>812629000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2013-12-20</th>\n",
       "      <td>1070.807807</td>\n",
       "      <td>1071.704631</td>\n",
       "      <td>1074.395103</td>\n",
       "      <td>1054.664976</td>\n",
       "      <td>1383</td>\n",
       "      <td>1297104000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2013-12-23</th>\n",
       "      <td>1077.982399</td>\n",
       "      <td>1078.879223</td>\n",
       "      <td>1078.879223</td>\n",
       "      <td>1062.736392</td>\n",
       "      <td>872</td>\n",
       "      <td>518425000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2013-12-24</th>\n",
       "      <td>1090.537935</td>\n",
       "      <td>1093.228406</td>\n",
       "      <td>1094.12523</td>\n",
       "      <td>1073.498279</td>\n",
       "      <td>282</td>\n",
       "      <td>196178000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2013-12-27</th>\n",
       "      <td>1092.331582</td>\n",
       "      <td>1093.228406</td>\n",
       "      <td>1099.506174</td>\n",
       "      <td>1070.807807</td>\n",
       "      <td>879</td>\n",
       "      <td>560266000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-11-10</th>\n",
       "      <td>2702</td>\n",
       "      <td>2703</td>\n",
       "      <td>2703</td>\n",
       "      <td>2644</td>\n",
       "      <td>3682</td>\n",
       "      <td>2441249545.3699</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-11-11</th>\n",
       "      <td>2721</td>\n",
       "      <td>2722</td>\n",
       "      <td>2742</td>\n",
       "      <td>2690</td>\n",
       "      <td>2668</td>\n",
       "      <td>1504591113.70969</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-11-12</th>\n",
       "      <td>2726</td>\n",
       "      <td>2727</td>\n",
       "      <td>2779</td>\n",
       "      <td>2724</td>\n",
       "      <td>2464</td>\n",
       "      <td>1243104170.45735</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-11-15</th>\n",
       "      <td>2694</td>\n",
       "      <td>2695</td>\n",
       "      <td>2723</td>\n",
       "      <td>2677</td>\n",
       "      <td>1749</td>\n",
       "      <td>1125345736.7274</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-11-16</th>\n",
       "      <td>2707</td>\n",
       "      <td>2708</td>\n",
       "      <td>2721</td>\n",
       "      <td>2665</td>\n",
       "      <td>2097</td>\n",
       "      <td>1093723466.5947</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2000 rows × 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                    BID          ASK       HIGH_1        LOW_1 NUM_MOVES  \\\n",
       "2013-12-19  1059.149096   1060.04592  1073.498279    1055.5618      1167   \n",
       "2013-12-20  1070.807807  1071.704631  1074.395103  1054.664976      1383   \n",
       "2013-12-23  1077.982399  1078.879223  1078.879223  1062.736392       872   \n",
       "2013-12-24  1090.537935  1093.228406   1094.12523  1073.498279       282   \n",
       "2013-12-27  1092.331582  1093.228406  1099.506174  1070.807807       879   \n",
       "...                 ...          ...          ...          ...       ...   \n",
       "2021-11-10         2702         2703         2703         2644      3682   \n",
       "2021-11-11         2721         2722         2742         2690      2668   \n",
       "2021-11-12         2726         2727         2779         2724      2464   \n",
       "2021-11-15         2694         2695         2723         2677      1749   \n",
       "2021-11-16         2707         2708         2721         2665      2097   \n",
       "\n",
       "                  TRNOVR_UNS  \n",
       "2013-12-19         812629000  \n",
       "2013-12-20        1297104000  \n",
       "2013-12-23         518425000  \n",
       "2013-12-24         196178000  \n",
       "2013-12-27         560266000  \n",
       "...                      ...  \n",
       "2021-11-10   2441249545.3699  \n",
       "2021-11-11  1504591113.70969  \n",
       "2021-11-12  1243104170.45735  \n",
       "2021-11-15   1125345736.7274  \n",
       "2021-11-16   1093723466.5947  \n",
       "\n",
       "[2000 rows x 6 columns]"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rdp.get_historical_price_summaries( universe = 'PSN.L', interval = rdp.Intervals.DAILY, count = 2000, \n",
    "                                   fields = ['BID','ASK','HIGH_1','LOW_1','NUM_MOVES','TRNOVR_UNS']\n",
    "                                  )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>BID</th>\n",
       "      <th>ASK</th>\n",
       "      <th>BID_LOW_1</th>\n",
       "      <th>ASK_HIGH_1</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2013-11-25</th>\n",
       "      <td>2.774</td>\n",
       "      <td>2.779</td>\n",
       "      <td>2.768</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2013-11-26</th>\n",
       "      <td>2.757</td>\n",
       "      <td>2.762</td>\n",
       "      <td>2.741</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2013-11-27</th>\n",
       "      <td>2.793</td>\n",
       "      <td>2.798</td>\n",
       "      <td>2.760</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2013-11-29</th>\n",
       "      <td>2.810</td>\n",
       "      <td>2.815</td>\n",
       "      <td>2.796</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2013-12-02</th>\n",
       "      <td>2.862</td>\n",
       "      <td>2.867</td>\n",
       "      <td>2.811</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-11-09</th>\n",
       "      <td>1.441</td>\n",
       "      <td>1.445</td>\n",
       "      <td>1.423</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-11-10</th>\n",
       "      <td>1.441</td>\n",
       "      <td>1.445</td>\n",
       "      <td>1.453</td>\n",
       "      <td>1.605</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-11-12</th>\n",
       "      <td>1.618</td>\n",
       "      <td>1.622</td>\n",
       "      <td>1.567</td>\n",
       "      <td>1.633</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-11-15</th>\n",
       "      <td>1.648</td>\n",
       "      <td>1.653</td>\n",
       "      <td>1.320</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-11-16</th>\n",
       "      <td>1.664</td>\n",
       "      <td>1.668</td>\n",
       "      <td>1.618</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2000 rows × 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "              BID    ASK  BID_LOW_1  ASK_HIGH_1\n",
       "2013-11-25  2.774  2.779      2.768         NaN\n",
       "2013-11-26  2.757  2.762      2.741         NaN\n",
       "2013-11-27  2.793  2.798      2.760         NaN\n",
       "2013-11-29  2.810  2.815      2.796         NaN\n",
       "2013-12-02  2.862  2.867      2.811         NaN\n",
       "...           ...    ...        ...         ...\n",
       "2021-11-09  1.441  1.445      1.423         NaN\n",
       "2021-11-10  1.441  1.445      1.453       1.605\n",
       "2021-11-12  1.618  1.622      1.567       1.633\n",
       "2021-11-15  1.648  1.653      1.320         NaN\n",
       "2021-11-16  1.664  1.668      1.618         NaN\n",
       "\n",
       "[2000 rows x 4 columns]"
      ]
     },
     "execution_count": 60,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "USD_10 = rdp.get_historical_price_summaries( universe = 'USDAM3L10Y=TWEB', interval = rdp.Intervals.DAILY, count = 2000, \n",
    "                                   fields = ['BID','ASK', 'BID_LOW_1', 'ASK_HIGH_1']\n",
    "                                  )\n",
    "\n",
    "USD_10"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [],
   "source": [
    "#rdp.get_historical_price_summaries( universe = 'USDAM3L10Y=TWEB', interval = rdp.Intervals.DAILY, count = 20, \n",
    "#                                  )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>BID</th>\n",
       "      <th>ASK</th>\n",
       "      <th>BID_LOW_1</th>\n",
       "      <th>ASK_HIGH_1</th>\n",
       "      <th>Spread</th>\n",
       "      <th>Range</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2013-11-25</th>\n",
       "      <td>2.774</td>\n",
       "      <td>2.779</td>\n",
       "      <td>2.768</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.005</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2013-11-26</th>\n",
       "      <td>2.757</td>\n",
       "      <td>2.762</td>\n",
       "      <td>2.741</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.005</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2013-11-27</th>\n",
       "      <td>2.793</td>\n",
       "      <td>2.798</td>\n",
       "      <td>2.760</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.005</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2013-11-29</th>\n",
       "      <td>2.810</td>\n",
       "      <td>2.815</td>\n",
       "      <td>2.796</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.005</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2013-12-02</th>\n",
       "      <td>2.862</td>\n",
       "      <td>2.867</td>\n",
       "      <td>2.811</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.005</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-11-09</th>\n",
       "      <td>1.441</td>\n",
       "      <td>1.445</td>\n",
       "      <td>1.423</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.004</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-11-10</th>\n",
       "      <td>1.441</td>\n",
       "      <td>1.445</td>\n",
       "      <td>1.453</td>\n",
       "      <td>1.605</td>\n",
       "      <td>0.004</td>\n",
       "      <td>0.152</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-11-12</th>\n",
       "      <td>1.618</td>\n",
       "      <td>1.622</td>\n",
       "      <td>1.567</td>\n",
       "      <td>1.633</td>\n",
       "      <td>0.004</td>\n",
       "      <td>0.066</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-11-15</th>\n",
       "      <td>1.648</td>\n",
       "      <td>1.653</td>\n",
       "      <td>1.320</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.005</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-11-16</th>\n",
       "      <td>1.664</td>\n",
       "      <td>1.668</td>\n",
       "      <td>1.618</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.004</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2000 rows × 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "              BID    ASK  BID_LOW_1  ASK_HIGH_1  Spread  Range\n",
       "2013-11-25  2.774  2.779      2.768         NaN   0.005    NaN\n",
       "2013-11-26  2.757  2.762      2.741         NaN   0.005    NaN\n",
       "2013-11-27  2.793  2.798      2.760         NaN   0.005    NaN\n",
       "2013-11-29  2.810  2.815      2.796         NaN   0.005    NaN\n",
       "2013-12-02  2.862  2.867      2.811         NaN   0.005    NaN\n",
       "...           ...    ...        ...         ...     ...    ...\n",
       "2021-11-09  1.441  1.445      1.423         NaN   0.004    NaN\n",
       "2021-11-10  1.441  1.445      1.453       1.605   0.004  0.152\n",
       "2021-11-12  1.618  1.622      1.567       1.633   0.004  0.066\n",
       "2021-11-15  1.648  1.653      1.320         NaN   0.005    NaN\n",
       "2021-11-16  1.664  1.668      1.618         NaN   0.004    NaN\n",
       "\n",
       "[2000 rows x 6 columns]"
      ]
     },
     "execution_count": 61,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "USD_10 ['Spread'] = USD_10 ['ASK'] - USD_10 ['BID']\n",
    "USD_10 ['Range'] = USD_10 ['ASK_HIGH_1'] - USD_10 ['BID_LOW_1']\n",
    "\n",
    "\n",
    "USD_10"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "metadata": {},
   "outputs": [],
   "source": [
    "#USD_10.to_csv(r\"US_LIBOR_10.csv\")\n",
    "\n",
    "# need Reginitiv to fix missing NaN values, load for random data atm "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th>BID</th>\n",
       "      <th>ASK</th>\n",
       "      <th>BID_LOW_1</th>\n",
       "      <th>ASK_HIGH_1</th>\n",
       "      <th>Spread</th>\n",
       "      <th>Range</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>25/11/2013</td>\n",
       "      <td>2.774</td>\n",
       "      <td>2.779</td>\n",
       "      <td>2.768</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.005</td>\n",
       "      <td>0.028</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>26/11/2013</td>\n",
       "      <td>2.757</td>\n",
       "      <td>2.762</td>\n",
       "      <td>2.741</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.005</td>\n",
       "      <td>0.035</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>27/11/2013</td>\n",
       "      <td>2.793</td>\n",
       "      <td>2.798</td>\n",
       "      <td>2.760</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.005</td>\n",
       "      <td>0.035</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>29/11/2013</td>\n",
       "      <td>2.810</td>\n",
       "      <td>2.815</td>\n",
       "      <td>2.796</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.005</td>\n",
       "      <td>0.036</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>02/12/2013</td>\n",
       "      <td>2.862</td>\n",
       "      <td>2.867</td>\n",
       "      <td>2.811</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.005</td>\n",
       "      <td>0.036</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1995</th>\n",
       "      <td>09/11/2021</td>\n",
       "      <td>1.441</td>\n",
       "      <td>1.445</td>\n",
       "      <td>1.423</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.004</td>\n",
       "      <td>0.133</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1996</th>\n",
       "      <td>10/11/2021</td>\n",
       "      <td>1.441</td>\n",
       "      <td>1.445</td>\n",
       "      <td>1.453</td>\n",
       "      <td>1.605</td>\n",
       "      <td>0.004</td>\n",
       "      <td>0.133</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1997</th>\n",
       "      <td>12/11/2021</td>\n",
       "      <td>1.618</td>\n",
       "      <td>1.622</td>\n",
       "      <td>1.567</td>\n",
       "      <td>1.633</td>\n",
       "      <td>0.004</td>\n",
       "      <td>0.056</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1998</th>\n",
       "      <td>15/11/2021</td>\n",
       "      <td>1.648</td>\n",
       "      <td>1.653</td>\n",
       "      <td>1.320</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.005</td>\n",
       "      <td>0.056</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1999</th>\n",
       "      <td>16/11/2021</td>\n",
       "      <td>1.664</td>\n",
       "      <td>1.668</td>\n",
       "      <td>1.618</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.004</td>\n",
       "      <td>0.056</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2000 rows × 7 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      Unnamed: 0    BID    ASK  BID_LOW_1  ASK_HIGH_1  Spread  Range\n",
       "0     25/11/2013  2.774  2.779      2.768         NaN   0.005  0.028\n",
       "1     26/11/2013  2.757  2.762      2.741         NaN   0.005  0.035\n",
       "2     27/11/2013  2.793  2.798      2.760         NaN   0.005  0.035\n",
       "3     29/11/2013  2.810  2.815      2.796         NaN   0.005  0.036\n",
       "4     02/12/2013  2.862  2.867      2.811         NaN   0.005  0.036\n",
       "...          ...    ...    ...        ...         ...     ...    ...\n",
       "1995  09/11/2021  1.441  1.445      1.423         NaN   0.004  0.133\n",
       "1996  10/11/2021  1.441  1.445      1.453       1.605   0.004  0.133\n",
       "1997  12/11/2021  1.618  1.622      1.567       1.633   0.004  0.056\n",
       "1998  15/11/2021  1.648  1.653      1.320         NaN   0.005  0.056\n",
       "1999  16/11/2021  1.664  1.668      1.618         NaN   0.004  0.056\n",
       "\n",
       "[2000 rows x 7 columns]"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "USD_V2 = pd.read_csv(\"US_LIBOR_10.csv\")\n",
    "\n",
    "\n",
    "USD_V2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th>BID</th>\n",
       "      <th>ASK</th>\n",
       "      <th>BID_LOW_1</th>\n",
       "      <th>ASK_HIGH_1</th>\n",
       "      <th>Spread</th>\n",
       "      <th>Range</th>\n",
       "      <th>Bid Dif</th>\n",
       "      <th>Ask Dif</th>\n",
       "      <th>Mid Dif</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>25/11/2013</td>\n",
       "      <td>2.774</td>\n",
       "      <td>2.779</td>\n",
       "      <td>2.768</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.005</td>\n",
       "      <td>0.028</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>26/11/2013</td>\n",
       "      <td>2.757</td>\n",
       "      <td>2.762</td>\n",
       "      <td>2.741</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.005</td>\n",
       "      <td>0.035</td>\n",
       "      <td>-0.017</td>\n",
       "      <td>-0.017</td>\n",
       "      <td>0.0170</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>27/11/2013</td>\n",
       "      <td>2.793</td>\n",
       "      <td>2.798</td>\n",
       "      <td>2.760</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.005</td>\n",
       "      <td>0.035</td>\n",
       "      <td>0.036</td>\n",
       "      <td>0.036</td>\n",
       "      <td>0.0360</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>29/11/2013</td>\n",
       "      <td>2.810</td>\n",
       "      <td>2.815</td>\n",
       "      <td>2.796</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.005</td>\n",
       "      <td>0.036</td>\n",
       "      <td>0.017</td>\n",
       "      <td>0.017</td>\n",
       "      <td>0.0170</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>02/12/2013</td>\n",
       "      <td>2.862</td>\n",
       "      <td>2.867</td>\n",
       "      <td>2.811</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.005</td>\n",
       "      <td>0.036</td>\n",
       "      <td>0.052</td>\n",
       "      <td>0.052</td>\n",
       "      <td>0.0520</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1995</th>\n",
       "      <td>09/11/2021</td>\n",
       "      <td>1.441</td>\n",
       "      <td>1.445</td>\n",
       "      <td>1.423</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.004</td>\n",
       "      <td>0.133</td>\n",
       "      <td>-0.063</td>\n",
       "      <td>-0.063</td>\n",
       "      <td>0.0630</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1996</th>\n",
       "      <td>10/11/2021</td>\n",
       "      <td>1.441</td>\n",
       "      <td>1.445</td>\n",
       "      <td>1.453</td>\n",
       "      <td>1.605</td>\n",
       "      <td>0.004</td>\n",
       "      <td>0.133</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1997</th>\n",
       "      <td>12/11/2021</td>\n",
       "      <td>1.618</td>\n",
       "      <td>1.622</td>\n",
       "      <td>1.567</td>\n",
       "      <td>1.633</td>\n",
       "      <td>0.004</td>\n",
       "      <td>0.056</td>\n",
       "      <td>0.177</td>\n",
       "      <td>0.177</td>\n",
       "      <td>0.1770</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1998</th>\n",
       "      <td>15/11/2021</td>\n",
       "      <td>1.648</td>\n",
       "      <td>1.653</td>\n",
       "      <td>1.320</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.005</td>\n",
       "      <td>0.056</td>\n",
       "      <td>0.030</td>\n",
       "      <td>0.031</td>\n",
       "      <td>0.0305</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1999</th>\n",
       "      <td>16/11/2021</td>\n",
       "      <td>1.664</td>\n",
       "      <td>1.668</td>\n",
       "      <td>1.618</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.004</td>\n",
       "      <td>0.056</td>\n",
       "      <td>0.016</td>\n",
       "      <td>0.015</td>\n",
       "      <td>0.0155</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2000 rows × 10 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      Unnamed: 0    BID    ASK  BID_LOW_1  ASK_HIGH_1  Spread  Range  Bid Dif  \\\n",
       "0     25/11/2013  2.774  2.779      2.768         NaN   0.005  0.028      NaN   \n",
       "1     26/11/2013  2.757  2.762      2.741         NaN   0.005  0.035   -0.017   \n",
       "2     27/11/2013  2.793  2.798      2.760         NaN   0.005  0.035    0.036   \n",
       "3     29/11/2013  2.810  2.815      2.796         NaN   0.005  0.036    0.017   \n",
       "4     02/12/2013  2.862  2.867      2.811         NaN   0.005  0.036    0.052   \n",
       "...          ...    ...    ...        ...         ...     ...    ...      ...   \n",
       "1995  09/11/2021  1.441  1.445      1.423         NaN   0.004  0.133   -0.063   \n",
       "1996  10/11/2021  1.441  1.445      1.453       1.605   0.004  0.133    0.000   \n",
       "1997  12/11/2021  1.618  1.622      1.567       1.633   0.004  0.056    0.177   \n",
       "1998  15/11/2021  1.648  1.653      1.320         NaN   0.005  0.056    0.030   \n",
       "1999  16/11/2021  1.664  1.668      1.618         NaN   0.004  0.056    0.016   \n",
       "\n",
       "      Ask Dif  Mid Dif  \n",
       "0         NaN      NaN  \n",
       "1      -0.017   0.0170  \n",
       "2       0.036   0.0360  \n",
       "3       0.017   0.0170  \n",
       "4       0.052   0.0520  \n",
       "...       ...      ...  \n",
       "1995   -0.063   0.0630  \n",
       "1996    0.000   0.0000  \n",
       "1997    0.177   0.1770  \n",
       "1998    0.031   0.0305  \n",
       "1999    0.015   0.0155  \n",
       "\n",
       "[2000 rows x 10 columns]"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "USD_V2['Bid Dif'] = USD_V2['BID'].diff()\n",
    "USD_V2['Ask Dif'] = USD_V2['ASK'].diff()\n",
    "USD_V2['Mid Dif'] = (USD_V2['Bid Dif'].abs() + USD_V2['Ask Dif'].abs())/2\n",
    "\n",
    "USD_V2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th>BID</th>\n",
       "      <th>ASK</th>\n",
       "      <th>BID_LOW_1</th>\n",
       "      <th>ASK_HIGH_1</th>\n",
       "      <th>Spread</th>\n",
       "      <th>Range</th>\n",
       "      <th>Bid Dif</th>\n",
       "      <th>Ask Dif</th>\n",
       "      <th>Mid Dif</th>\n",
       "      <th>Pre_Square</th>\n",
       "      <th>Square</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>25/11/2013</td>\n",
       "      <td>2.774</td>\n",
       "      <td>2.779</td>\n",
       "      <td>2.768</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.005</td>\n",
       "      <td>0.028</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>26/11/2013</td>\n",
       "      <td>2.757</td>\n",
       "      <td>2.762</td>\n",
       "      <td>2.741</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.005</td>\n",
       "      <td>0.035</td>\n",
       "      <td>-0.017</td>\n",
       "      <td>-0.017</td>\n",
       "      <td>0.0170</td>\n",
       "      <td>44.5</td>\n",
       "      <td>1980.25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>27/11/2013</td>\n",
       "      <td>2.793</td>\n",
       "      <td>2.798</td>\n",
       "      <td>2.760</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.005</td>\n",
       "      <td>0.035</td>\n",
       "      <td>0.036</td>\n",
       "      <td>0.036</td>\n",
       "      <td>0.0360</td>\n",
       "      <td>63.5</td>\n",
       "      <td>4032.25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>29/11/2013</td>\n",
       "      <td>2.810</td>\n",
       "      <td>2.815</td>\n",
       "      <td>2.796</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.005</td>\n",
       "      <td>0.036</td>\n",
       "      <td>0.017</td>\n",
       "      <td>0.017</td>\n",
       "      <td>0.0170</td>\n",
       "      <td>45.0</td>\n",
       "      <td>2025.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>02/12/2013</td>\n",
       "      <td>2.862</td>\n",
       "      <td>2.867</td>\n",
       "      <td>2.811</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.005</td>\n",
       "      <td>0.036</td>\n",
       "      <td>0.052</td>\n",
       "      <td>0.052</td>\n",
       "      <td>0.0520</td>\n",
       "      <td>80.0</td>\n",
       "      <td>6400.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1995</th>\n",
       "      <td>09/11/2021</td>\n",
       "      <td>1.441</td>\n",
       "      <td>1.445</td>\n",
       "      <td>1.423</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.004</td>\n",
       "      <td>0.133</td>\n",
       "      <td>-0.063</td>\n",
       "      <td>-0.063</td>\n",
       "      <td>0.0630</td>\n",
       "      <td>137.5</td>\n",
       "      <td>18906.25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1996</th>\n",
       "      <td>10/11/2021</td>\n",
       "      <td>1.441</td>\n",
       "      <td>1.445</td>\n",
       "      <td>1.453</td>\n",
       "      <td>1.605</td>\n",
       "      <td>0.004</td>\n",
       "      <td>0.133</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>74.5</td>\n",
       "      <td>5550.25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1997</th>\n",
       "      <td>12/11/2021</td>\n",
       "      <td>1.618</td>\n",
       "      <td>1.622</td>\n",
       "      <td>1.567</td>\n",
       "      <td>1.633</td>\n",
       "      <td>0.004</td>\n",
       "      <td>0.056</td>\n",
       "      <td>0.177</td>\n",
       "      <td>0.177</td>\n",
       "      <td>0.1770</td>\n",
       "      <td>213.0</td>\n",
       "      <td>45369.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1998</th>\n",
       "      <td>15/11/2021</td>\n",
       "      <td>1.648</td>\n",
       "      <td>1.653</td>\n",
       "      <td>1.320</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.005</td>\n",
       "      <td>0.056</td>\n",
       "      <td>0.030</td>\n",
       "      <td>0.031</td>\n",
       "      <td>0.0305</td>\n",
       "      <td>68.5</td>\n",
       "      <td>4692.25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1999</th>\n",
       "      <td>16/11/2021</td>\n",
       "      <td>1.664</td>\n",
       "      <td>1.668</td>\n",
       "      <td>1.618</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.004</td>\n",
       "      <td>0.056</td>\n",
       "      <td>0.016</td>\n",
       "      <td>0.015</td>\n",
       "      <td>0.0155</td>\n",
       "      <td>51.5</td>\n",
       "      <td>2652.25</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2000 rows × 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      Unnamed: 0    BID    ASK  BID_LOW_1  ASK_HIGH_1  Spread  Range  Bid Dif  \\\n",
       "0     25/11/2013  2.774  2.779      2.768         NaN   0.005  0.028      NaN   \n",
       "1     26/11/2013  2.757  2.762      2.741         NaN   0.005  0.035   -0.017   \n",
       "2     27/11/2013  2.793  2.798      2.760         NaN   0.005  0.035    0.036   \n",
       "3     29/11/2013  2.810  2.815      2.796         NaN   0.005  0.036    0.017   \n",
       "4     02/12/2013  2.862  2.867      2.811         NaN   0.005  0.036    0.052   \n",
       "...          ...    ...    ...        ...         ...     ...    ...      ...   \n",
       "1995  09/11/2021  1.441  1.445      1.423         NaN   0.004  0.133   -0.063   \n",
       "1996  10/11/2021  1.441  1.445      1.453       1.605   0.004  0.133    0.000   \n",
       "1997  12/11/2021  1.618  1.622      1.567       1.633   0.004  0.056    0.177   \n",
       "1998  15/11/2021  1.648  1.653      1.320         NaN   0.005  0.056    0.030   \n",
       "1999  16/11/2021  1.664  1.668      1.618         NaN   0.004  0.056    0.016   \n",
       "\n",
       "      Ask Dif  Mid Dif  Pre_Square    Square  \n",
       "0         NaN      NaN         NaN       NaN  \n",
       "1      -0.017   0.0170        44.5   1980.25  \n",
       "2       0.036   0.0360        63.5   4032.25  \n",
       "3       0.017   0.0170        45.0   2025.00  \n",
       "4       0.052   0.0520        80.0   6400.00  \n",
       "...       ...      ...         ...       ...  \n",
       "1995   -0.063   0.0630       137.5  18906.25  \n",
       "1996    0.000   0.0000        74.5   5550.25  \n",
       "1997    0.177   0.1770       213.0  45369.00  \n",
       "1998    0.031   0.0305        68.5   4692.25  \n",
       "1999    0.015   0.0155        51.5   2652.25  \n",
       "\n",
       "[2000 rows x 12 columns]"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "USD_V2 ['Pre_Square'] = ((USD_V2['Range']/2) + (USD_V2['Mid Dif']) + (2*USD_V2['Spread'])) * 1000\n",
    "USD_V2 ['Square'] = USD_V2 ['Pre_Square'] * USD_V2 ['Pre_Square']\n",
    "\n",
    "USD_V2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "USD_V2_2 = USD_V2\n",
    "USD_V2_3 = USD_V2\n",
    "USD_V2_4 = USD_V2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [],
   "source": [
    "Square_Series = (np.sqrt(USD_V2['Square'] + USD_V2_2['Square'] + USD_V2_3['Square'] + USD_V2_3['Square'])/20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0         NaN\n",
       "1        4.45\n",
       "2        6.35\n",
       "3        4.50\n",
       "4        8.00\n",
       "        ...  \n",
       "1995    13.75\n",
       "1996     7.45\n",
       "1997    21.30\n",
       "1998     6.85\n",
       "1999     5.15\n",
       "Name: Square, Length: 2000, dtype: float64"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Square_Series"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Now need to make it a time decaying series........."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "# https://stackoverflow.com/questions/28056171/how-to-build-and-fill-pandas-dataframe-from-for-loop?noredirect=1&lq=1\n",
    "# https://stackoverflow.com/questions/13784192/creating-an-empty-pandas-dataframe-then-filling-it"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# https://developers.refinitiv.com/en/article-catalog/article/discover-our-refinitiv-data-platform-library-part-1"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
